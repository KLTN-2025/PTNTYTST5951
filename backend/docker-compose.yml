services:
  redis:
    image: 'redis:latest'
    container_name: redis-container
    ports:
      - '6379:6379'
    volumes:
      - redis-data:/data
    networks:
      - auth_network
  # =======================
  # Keycloak stack
  # =======================
  auth_postgres:
    image: postgres:16
    container_name: keycloak-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U keycloak -d keycloak" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - auth_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak
    restart: unless-stopped
    environment:
      # --- Database ---
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://auth_postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: password

      # --- HTTP cho chế độ 'start' (prod) ---
      KC_HTTP_ENABLED: "true"
      KC_HTTP_PORT: "8080"
      KC_HOSTNAME: localhost
      KC_HOSTNAME_STRICT: "false"

      # --- Admin ---
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - keycloak-data:/opt/keycloak/data
    command: start
    ports:
      - "8181:8080"
    depends_on:
      auth_postgres:
        condition: service_healthy
    networks:
      - auth_network

  # =======================
  # HAPI FHIR stack
  # =======================
  hapi_postgres:
    image: postgres:16
    container_name: hapi-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: hapi_database
      POSTGRES_USER: hapi_user
      POSTGRES_PASSWORD: hapi_password
    volumes:
      - hapi-postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U hapi_user -d hapi_database" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - hapi_network

  hapi_fhir:
    image: hapiproject/hapi:latest
    container_name: hapi-fhir
    restart: unless-stopped
    environment:
      JAVA_OPTS: "-Xms1g -Xmx4g"
      SPRING_DATASOURCE_URL: jdbc:postgresql://hapi_postgres:5432/hapi_database
      SPRING_DATASOURCE_USERNAME: hapi_user
      SPRING_DATASOURCE_PASSWORD: hapi_password
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgresDialect
      SPRING_JPA_PROPERTIES_HIBERNATE_SEARCH_ENABLED: "false"
      hapi.fhir.fhir_version: R4
      hapi.fhir.ig_runtime_upload_enabled: "true"
    ports:
      - "8080:8080"
    depends_on:
      hapi_postgres:
        condition: service_healthy
    networks:
      - hapi_network

volumes:
  postgres-data:
  redis-data:
  keycloak-data:
  hapi-postgres-data:


networks:
  auth_network:
    driver: bridge
  hapi_network:
    driver: bridge
